{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Quarters\n\n\nWelcome to the Quarters documentation! Quarters is a universal cryptocurrency\nfor games. This document includes SDK, APIs and code snippets. With them, you\ncan easily integrate Quarters tokens to your games.\n\n\nIf you feel like contributing to the docs, like changing or adding things, feel\nfree to submit a \nPull Request\n at\n\nhttps://github.com/weiks/quarters-docs\n\n\nFor our website visit\n\nPocketful of Quarters\n.\n\n\nDevelopment tools and library\n\n\nHere is the list of tools and libraries quarters project provides to get\nstarted.\n\n\nQuarters contract\n\n\nQuarters contract is Ethereum smart contract and written in solidity. It\nincludes ERC20 token and withdraw functions. You can check code and ABI here on\netherscan.\n\n\nMainnet: \n[Yet to be deployed]\n\n\nRopsten:\n\n0x8c05ebef0b4419416e8efb4c26edb4aa6cd7bb27\n\n\nQuarters buttons\n\n\nQuarters buttons are small snippets. It is easy and fastest way to integrate\n\"Play with Quarters\" feature on game. Here is quick setup to embed buttons on\nany web based game to accept Quarters.\n\n\nscript\n\n    \nsrc\n=\nhttps://dev.pocketfulofquarters.com/embeds/button.js\n\n    \ndata-script-name\n=\nquarters-embeds\n\n    \ndata-app-id\n=\nAPP-ID\n\n    \ndata-app-key\n=\nAPP-KEY\n\n    \ncharset\n=\nutf-8\n\n\n/\nscript\n\n\n\nbutton\n\n    \nclass\n=\nbuy-quarters-button\n\n    \ndata-widget-type\n=\nbutton\n\n    \ndata-order-code\n=\n1\n\n    \ndata-amount\n=\n2\n\n  Play with 2 Quarters\n\n/\nbutton\n\n\n\n\n\n\nTo check complete documentation, \nvisit Quarters Buttons\n.\n\n\nJavascript SDK\n\n\nJavascript SDK provides rich API interface to help build oauth on Quarters.\nDevelopers can use \nQuarters oauth\n to add authentication to the game and\nretrieve information for client-only games.\n\n\n  npm install --save quarters-js\n\n\n\n\n\nTo check complete documentation, \nvisit Javascript SDK\n.\n\n\nNode SDK (for server)\n\n\nNode SDK provides helpers to interact with Quarters server and contract.\n\n\n  npm install --save node-quarters\n\n\n\n\n\nTo check complete documentation, \nvisit Node SDK\n.", 
            "title": "Introduction"
        }, 
        {
            "location": "/#welcome-to-quarters", 
            "text": "Welcome to the Quarters documentation! Quarters is a universal cryptocurrency\nfor games. This document includes SDK, APIs and code snippets. With them, you\ncan easily integrate Quarters tokens to your games.  If you feel like contributing to the docs, like changing or adding things, feel\nfree to submit a  Pull Request  at https://github.com/weiks/quarters-docs  For our website visit Pocketful of Quarters .", 
            "title": "Welcome to Quarters"
        }, 
        {
            "location": "/#development-tools-and-library", 
            "text": "Here is the list of tools and libraries quarters project provides to get\nstarted.  Quarters contract  Quarters contract is Ethereum smart contract and written in solidity. It\nincludes ERC20 token and withdraw functions. You can check code and ABI here on\netherscan.  Mainnet:  [Yet to be deployed]  Ropsten: 0x8c05ebef0b4419416e8efb4c26edb4aa6cd7bb27  Quarters buttons  Quarters buttons are small snippets. It is easy and fastest way to integrate\n\"Play with Quarters\" feature on game. Here is quick setup to embed buttons on\nany web based game to accept Quarters.  script \n     src = https://dev.pocketfulofquarters.com/embeds/button.js \n     data-script-name = quarters-embeds \n     data-app-id = APP-ID \n     data-app-key = APP-KEY \n     charset = utf-8  / script  button \n     class = buy-quarters-button \n     data-widget-type = button \n     data-order-code = 1 \n     data-amount = 2 \n  Play with 2 Quarters / button   To check complete documentation,  visit Quarters Buttons .  Javascript SDK  Javascript SDK provides rich API interface to help build oauth on Quarters.\nDevelopers can use  Quarters oauth  to add authentication to the game and\nretrieve information for client-only games.    npm install --save quarters-js  To check complete documentation,  visit Javascript SDK .  Node SDK (for server)  Node SDK provides helpers to interact with Quarters server and contract.    npm install --save node-quarters  To check complete documentation,  visit Node SDK .", 
            "title": "Development tools and library"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Getting started\n\n\nOur API makes it easy to integrate Quarters into both new and existing game\napplications.\n\n\nQuarter's APIs enable a variety of capabilities; from simply gathering read-only\ndata, to building something that's never been done before\n\n\nCapabilities:\n\n\n\n\nCreate user account with Ethereum wallet and buy quarters\n\n\nRetrieve user account information, send transfer requests using oauth\n\n\nRetrieve historical price, tranche and supply information\n\n\nAccept and request quarters as a game developer\n\n\n\n\nWe offer a variety of client libraries and server SDKs.\n\n\nStart with your first app\n\n\nThere are two ways you can integrate Quarters in your game - Quarters buttons and using SDK. But to start with it, you will need to create app on Quarters platform. One can create multiple apps.\n\n\n\u00bb \nCreate your first App\n\n\nAPI key authentication\n\n\nFollow Quarters Developer channels for updates\n\n\nIf you can't find the answer to your question or need help, please explore and\ncontact us through our dev support channels.\n\n\nTo contact us about confidential or otherwise private information, email us at \ndev@pocketfulofquarters.com", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#getting-started", 
            "text": "Our API makes it easy to integrate Quarters into both new and existing game\napplications.  Quarter's APIs enable a variety of capabilities; from simply gathering read-only\ndata, to building something that's never been done before  Capabilities:   Create user account with Ethereum wallet and buy quarters  Retrieve user account information, send transfer requests using oauth  Retrieve historical price, tranche and supply information  Accept and request quarters as a game developer   We offer a variety of client libraries and server SDKs.", 
            "title": "Getting started"
        }, 
        {
            "location": "/getting-started/#start-with-your-first-app", 
            "text": "There are two ways you can integrate Quarters in your game - Quarters buttons and using SDK. But to start with it, you will need to create app on Quarters platform. One can create multiple apps.  \u00bb  Create your first App", 
            "title": "Start with your first app"
        }, 
        {
            "location": "/getting-started/#api-key-authentication", 
            "text": "", 
            "title": "API key authentication"
        }, 
        {
            "location": "/getting-started/#follow-quarters-developer-channels-for-updates", 
            "text": "If you can't find the answer to your question or need help, please explore and\ncontact us through our dev support channels.  To contact us about confidential or otherwise private information, email us at  dev@pocketfulofquarters.com", 
            "title": "Follow Quarters Developer channels for updates"
        }, 
        {
            "location": "/oauth/introduction/", 
            "text": "Quarters OAuth\n\n\n\n\nThe Quarters API allows developers to use the OAuth2 protocol to allow a Quarters user to grant a 3rd party application full or partial access to his/her account, without sharing the account's API key or login credentials. It is a slightly more complex integration than the API Key authentication method, but is more flexible. OAuth2 works well for web applications, as well as desktop and mobile apps.\n\n\n\u00bb Get started integrating Quarters OAuth to your application", 
            "title": "Introduction"
        }, 
        {
            "location": "/oauth/introduction/#quarters-oauth", 
            "text": "The Quarters API allows developers to use the OAuth2 protocol to allow a Quarters user to grant a 3rd party application full or partial access to his/her account, without sharing the account's API key or login credentials. It is a slightly more complex integration than the API Key authentication method, but is more flexible. OAuth2 works well for web applications, as well as desktop and mobile apps.  \u00bb Get started integrating Quarters OAuth to your application", 
            "title": "Quarters OAuth"
        }, 
        {
            "location": "/oauth/integrating/", 
            "text": "Integrating Quarters OAuth with your web game apps\n\n\nBefore integrating Quarters OAuth, you'll need to register a new OAuth2 application under \nyour profile\n. If you're using a previous OAuth2 implementation, you may need to configure the following settings:\n\n\n\n\nAuthorize URL\n: \nhttps://dev.pocketfulofquarters.com/oauth/authorize\n\n\nAccess Token URL\n: \nhttps://dev.pocketfulofquarters.com/oauth/token\n\n\n\n\n\n\nWarning\n\n\nQuarters is still in beta. API may change in stable version.\n\n\n\n\nTo integrate your third-party web server application with Quarters, use the following flow:\n\n\n1. Redirect users to request Quarters access\n\n\nGET https://dev.pocketfulofquarters.com/oauth/authorize?response_type=code\nclient_id=YOUR_CLIENT_ID\nredirect_uri=YOUR_REDIRECT_URL\ninline=true\n\n\n\n\n\nWhen redirecting a user to Quarters to authorize access to your application, you'll need to construct the authorization URL with the correct parameters. Here's a list of parameters you should always specify:\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nresponse_type\n\n\nRequired\n Value \ncode\n\n\n\n\n\n\nclient_id\n\n\nRequired\n The client ID you received after registering your application.\n\n\n\n\n\n\ninline\n\n\nRequired\n Value \ntrue\n\n\n\n\n\n\nredirect_uri\n\n\nOptional\n The URL (encoded) in your app where users will be sent after authorization.\n\n\n\n\n\n\n\n\nExample of an authorization URL:\n\n\nGET https://dev.pocketfulofquarters.com/oauth/authorize?response_type=code\nclient_id=Lpk5sPrA7P59HFlN7obS\ninline=true\nredirect_uri=https%3A%2F%2Fexample.com%2Foauth%2Fcallback\n\n\n\n\n\n2. Quarters redirects back to your site\n\n\nIf the user approves your application, Quarters will redirect them back to your \nredirect_uri\n with a temporary code parameter.\n\n\nExample of the redirect:\n\n\nGET https://example.com/oauth/callback?success=true\ncode=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ2R2lMR3Z3UERYVHUzVnlFQlRySmNJdTJhNzAyIiwicmFuZG9tIjoiNmFkODI2ZjAtZDY1ZS0xMWU3LTg3Y2UtZjEyMTk1M2I0ZWQxIiwiYXBwSWQiOiJMcGs1c1ByQTdQNTlIRmxON29iUyIsInRva2VuVHlwZSI6Imp3dDphdXRob3JpemF0aW9uX2NvZGUiLCJpYXQiOjE1MTIxMDg2NjYsImV4cCI6MTUxMjEwODcyNn0.Pwl3Mt_RN5Qut5VpCshP32FkZ_lES84PrDnzIGDG8J0\n\n\n\n\n\nOAuth2 Redirect URI\n\n\nFor added security, all \nredirect_uri\n must use SSL (i.e. begin with \nhttps://\n). URIs without SSL can only be used for development and testing and will not be supported in production.\n\n\n3. Exchange code for an access token\n\n\nAfter you have received the temporary code, you can exchange it for valid access and refresh tokens. This can be done by making a \nPOST\n call:\n\n\nPOST https://api.dev.pocketfulofquarters/v1/oauth/token\n\n\n\n\n\nWith following parameters:\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngrant_type\n\n\nRequired\n Value \nauthorization_code\n\n\n\n\n\n\ncode\n\n\nRequired\n Value from step 2\n\n\n\n\n\n\nclient_id\n\n\nRequired\n The app ID you received after registering your application\n\n\n\n\n\n\nclient_secret\n\n\nRequired\n The \nweb secret\n you received after registering your application\n\n\n\n\n\n\n\n\nExample request:\n\n\ncurl\n \nhttps\n://\napi\n.\ndev\n.\npocketfulofquarters\n.\ncom\n/\nv1\n/\noauth\n/\ntoken\n \n\\\n\n  \n-X\n \nPOST\n \n\\\n\n  \n-H\n \nContent-Type: application/json;charset=UTF-8\n \n\\\n\n  \n--data-binary\n \n{\nclient_id\n:\nLpk5sPrA7P59HFlN7obS\n,\nclient_secret\n:\n1s4x2v8h3b9ollw1pt2afj8knheamvmvv\n,\ngrant_type\n:\nauthorization_code\n,\ncode\n:\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ2R2lMR3Z3UERYVHUzVnlFQlRySmNJdTJhNzAyIiwicmFuZG9tIjoiMDgxMmMxNTAtZDY2NC0xMWU3LTg3Y2UtZjEyMTk1M2I0ZWQxIiwiYXBwSWQiOiJMcGs1c1ByQTdQNTlIRmxON29iUyIsInRva2VuVHlwZSI6Imp3dDphdXRob3JpemF0aW9uX2NvZGUiLCJpYXQiOjE1MTIxMTEwNzcsImV4cCI6MTUxMjExMTEzN30.Jljjd7yjk-cr1uYSq0kSTwCpK8zNq8YGrVk_AQu6u4c\n}\n\n\n\n\n\n\nAfter a successful request, a valid access token will be returned in the response:\n\n\n{\n\n  \nclient_id\n:\nLpk5sPrA7P59HFlN7obS\n,\n\n  \nrefresh_token\n:\nd832e7c419869...5918b96\n,\n\n  \naccess_token\n:\neyJhbGciOiJIU...81plg\n\n\n}\n\n\n\n\n\n\n4. Make an API call\n\n\nAfter you have a valid access token, you can make your first API call:\n\n\ncurl https://api.dev.pocketfulofquarters.com/v1/me \\\n  -H \nAuthorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ2R2lMR3Z3UERYVHUzVnlFQlRySmNJdTJhNzAyIiwicmFuZG9tIjoiMWE5Njk3YzAtZDY2NC0xMWU3LTg3Y2UtZjEyMTk1M2I0ZWQxIiwiYXBwSWQiOiJMcGs1c1ByQTdQNTlIRmxON29iUyIsImFkbWluIjpmYWxzZSwiZGV2ZWxvcGVyIjpmYWxzZSwidG9rZW5UeXBlIjoiand0OnVzZXIiLCJpYXQiOjE1MTIxMTExMDgsImV4cCI6MTUxMjExMTcwOH0.PFlJjGoN3xza1Qk3ZIBaOzMPyYbrQvnjyvyvQf81plg\n\n\n\n\n\n\nExample response:\n\n\n{\n\n  \nid\n:\nvGiLGvwPDXTu3VyEBTrJcIu2a702\n,\n\n  \nuserId\n:\nvGiLGvwPDXTu3VyEBTrJcIu2a702\n,\n\n  \ndisplayName\n:\nUser1\n,\n\n  \nemail\n:\nuser1@example.com\n,\n\n  \nemailVerified\n:\ntrue\n\n\n}", 
            "title": "Integrating"
        }, 
        {
            "location": "/oauth/integrating/#integrating-quarters-oauth-with-your-web-game-apps", 
            "text": "Before integrating Quarters OAuth, you'll need to register a new OAuth2 application under  your profile . If you're using a previous OAuth2 implementation, you may need to configure the following settings:   Authorize URL :  https://dev.pocketfulofquarters.com/oauth/authorize  Access Token URL :  https://dev.pocketfulofquarters.com/oauth/token    Warning  Quarters is still in beta. API may change in stable version.   To integrate your third-party web server application with Quarters, use the following flow:", 
            "title": "Integrating Quarters OAuth with your web game apps"
        }, 
        {
            "location": "/oauth/integrating/#1-redirect-users-to-request-quarters-access", 
            "text": "GET https://dev.pocketfulofquarters.com/oauth/authorize?response_type=code client_id=YOUR_CLIENT_ID redirect_uri=YOUR_REDIRECT_URL inline=true  When redirecting a user to Quarters to authorize access to your application, you'll need to construct the authorization URL with the correct parameters. Here's a list of parameters you should always specify:     Parameter  Description      response_type  Required  Value  code    client_id  Required  The client ID you received after registering your application.    inline  Required  Value  true    redirect_uri  Optional  The URL (encoded) in your app where users will be sent after authorization.     Example of an authorization URL:  GET https://dev.pocketfulofquarters.com/oauth/authorize?response_type=code client_id=Lpk5sPrA7P59HFlN7obS inline=true redirect_uri=https%3A%2F%2Fexample.com%2Foauth%2Fcallback", 
            "title": "1. Redirect users to request Quarters access"
        }, 
        {
            "location": "/oauth/integrating/#2-quarters-redirects-back-to-your-site", 
            "text": "If the user approves your application, Quarters will redirect them back to your  redirect_uri  with a temporary code parameter.  Example of the redirect:  GET https://example.com/oauth/callback?success=true code=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ2R2lMR3Z3UERYVHUzVnlFQlRySmNJdTJhNzAyIiwicmFuZG9tIjoiNmFkODI2ZjAtZDY1ZS0xMWU3LTg3Y2UtZjEyMTk1M2I0ZWQxIiwiYXBwSWQiOiJMcGs1c1ByQTdQNTlIRmxON29iUyIsInRva2VuVHlwZSI6Imp3dDphdXRob3JpemF0aW9uX2NvZGUiLCJpYXQiOjE1MTIxMDg2NjYsImV4cCI6MTUxMjEwODcyNn0.Pwl3Mt_RN5Qut5VpCshP32FkZ_lES84PrDnzIGDG8J0  OAuth2 Redirect URI  For added security, all  redirect_uri  must use SSL (i.e. begin with  https:// ). URIs without SSL can only be used for development and testing and will not be supported in production.", 
            "title": "2. Quarters redirects back to your site"
        }, 
        {
            "location": "/oauth/integrating/#3-exchange-code-for-an-access-token", 
            "text": "After you have received the temporary code, you can exchange it for valid access and refresh tokens. This can be done by making a  POST  call:  POST https://api.dev.pocketfulofquarters/v1/oauth/token  With following parameters:     Parameter  Description      grant_type  Required  Value  authorization_code    code  Required  Value from step 2    client_id  Required  The app ID you received after registering your application    client_secret  Required  The  web secret  you received after registering your application     Example request:  curl   https :// api . dev . pocketfulofquarters . com / v1 / oauth / token   \\ \n   -X   POST   \\ \n   -H   Content-Type: application/json;charset=UTF-8   \\ \n   --data-binary   { client_id : Lpk5sPrA7P59HFlN7obS , client_secret : 1s4x2v8h3b9ollw1pt2afj8knheamvmvv , grant_type : authorization_code , code : eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ2R2lMR3Z3UERYVHUzVnlFQlRySmNJdTJhNzAyIiwicmFuZG9tIjoiMDgxMmMxNTAtZDY2NC0xMWU3LTg3Y2UtZjEyMTk1M2I0ZWQxIiwiYXBwSWQiOiJMcGs1c1ByQTdQNTlIRmxON29iUyIsInRva2VuVHlwZSI6Imp3dDphdXRob3JpemF0aW9uX2NvZGUiLCJpYXQiOjE1MTIxMTEwNzcsImV4cCI6MTUxMjExMTEzN30.Jljjd7yjk-cr1uYSq0kSTwCpK8zNq8YGrVk_AQu6u4c }   After a successful request, a valid access token will be returned in the response:  { \n   client_id : Lpk5sPrA7P59HFlN7obS , \n   refresh_token : d832e7c419869...5918b96 , \n   access_token : eyJhbGciOiJIU...81plg  }", 
            "title": "3. Exchange code for an access token"
        }, 
        {
            "location": "/oauth/integrating/#4-make-an-api-call", 
            "text": "After you have a valid access token, you can make your first API call:  curl https://api.dev.pocketfulofquarters.com/v1/me \\\n  -H  Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiJ2R2lMR3Z3UERYVHUzVnlFQlRySmNJdTJhNzAyIiwicmFuZG9tIjoiMWE5Njk3YzAtZDY2NC0xMWU3LTg3Y2UtZjEyMTk1M2I0ZWQxIiwiYXBwSWQiOiJMcGs1c1ByQTdQNTlIRmxON29iUyIsImFkbWluIjpmYWxzZSwiZGV2ZWxvcGVyIjpmYWxzZSwidG9rZW5UeXBlIjoiand0OnVzZXIiLCJpYXQiOjE1MTIxMTExMDgsImV4cCI6MTUxMjExMTcwOH0.PFlJjGoN3xza1Qk3ZIBaOzMPyYbrQvnjyvyvQf81plg   Example response:  { \n   id : vGiLGvwPDXTu3VyEBTrJcIu2a702 , \n   userId : vGiLGvwPDXTu3VyEBTrJcIu2a702 , \n   displayName : User1 , \n   email : user1@example.com , \n   emailVerified : true  }", 
            "title": "4. Make an API call"
        }, 
        {
            "location": "/oauth/refresh-tokens/", 
            "text": "Access tokens and Refresh tokens\n\n\nQuarters uses security feature of OAuth2 called refresh tokens. When you first authenticate, your app will be given an \naccess_token\n and a \nrefresh_token\n. The access token is used to authenticate all your requests, but expires in 10 minutes. Once an access token has expired, you will need to use the refresh token to obtain a new access token and a new refresh token. The refresh token never expires but it can only be exchanged once for a new set of access and refresh tokens. If you try to make a call with an expired access token, a 401 response will be returned.\n\n\nThis process adds some complexity for Quarters Connect integrations, but provides an valuable layer of security since a compromised access token is automatically revoked after 10 minutes.\n\n\nTo get a new access token, you'll need to do a POST request to \n/oauth/token\n just like before, but this time you must include your \nrefresh_token\n and change the \ngrant_type\n to \nrefresh_token\n.\n\n\ncurl https://api.dev.pocketfulofquarters.com/v1/oauth/token \\\n  -X POST \\\n  -d \ngrant_type=refresh_token\n\n      client_id=YOUR_APP_ID\n\n      client_secret=YOUR_WEB_SECRET\n\n      refresh_token=REFRESH_TOKEN\n\n\n\n\n\n\nThe expected result is a response containing the access token, as before:\n\n\n{\n\n  \nclient_id\n:\n \n...\n,\n\n  \naccess_token\n:\n \n...\n,\n\n  \nrefresh_token\n:\n \n...\n\n\n}\n\n\n\n\n\n\nNote: If you are using an OAuth2 library that supports refresh tokens, you\u2019re in luck - the library will automatically take care of these details.", 
            "title": "Refresh tokens"
        }, 
        {
            "location": "/oauth/refresh-tokens/#access-tokens-and-refresh-tokens", 
            "text": "Quarters uses security feature of OAuth2 called refresh tokens. When you first authenticate, your app will be given an  access_token  and a  refresh_token . The access token is used to authenticate all your requests, but expires in 10 minutes. Once an access token has expired, you will need to use the refresh token to obtain a new access token and a new refresh token. The refresh token never expires but it can only be exchanged once for a new set of access and refresh tokens. If you try to make a call with an expired access token, a 401 response will be returned.  This process adds some complexity for Quarters Connect integrations, but provides an valuable layer of security since a compromised access token is automatically revoked after 10 minutes.  To get a new access token, you'll need to do a POST request to  /oauth/token  just like before, but this time you must include your  refresh_token  and change the  grant_type  to  refresh_token .  curl https://api.dev.pocketfulofquarters.com/v1/oauth/token \\\n  -X POST \\\n  -d  grant_type=refresh_token \n      client_id=YOUR_APP_ID \n      client_secret=YOUR_WEB_SECRET \n      refresh_token=REFRESH_TOKEN   The expected result is a response containing the access token, as before:  { \n   client_id :   ... , \n   access_token :   ... , \n   refresh_token :   ...  }   Note: If you are using an OAuth2 library that supports refresh tokens, you\u2019re in luck - the library will automatically take care of these details.", 
            "title": "Access tokens and Refresh tokens"
        }, 
        {
            "location": "/quarters-buttons/", 
            "text": "", 
            "title": "Quarters buttons"
        }, 
        {
            "location": "/js-sdk/", 
            "text": "", 
            "title": "Javascript SDK"
        }, 
        {
            "location": "/node-sdk/", 
            "text": "", 
            "title": "Node SDK"
        }, 
        {
            "location": "/guides/create-app/", 
            "text": "Create App\n\n\nIn this short guide, you\u2019ll learn how to programmatically create a bitcoin wallet, how to send bitcoin into that wallet, and how to retrieve data from that wallet.\n\n\nTasks we will cover in this short tutorial:\n\n\n\n\nAuthenticate your account (create an API Key)\n\n\nRetrieve data from your bitcoin wallet", 
            "title": "Create App"
        }, 
        {
            "location": "/guides/create-app/#create-app", 
            "text": "In this short guide, you\u2019ll learn how to programmatically create a bitcoin wallet, how to send bitcoin into that wallet, and how to retrieve data from that wallet.  Tasks we will cover in this short tutorial:   Authenticate your account (create an API Key)  Retrieve data from your bitcoin wallet", 
            "title": "Create App"
        }, 
        {
            "location": "/guides/create-app/", 
            "text": "Create App\n\n\nIn this short guide, you\u2019ll learn how to programmatically create a bitcoin wallet, how to send bitcoin into that wallet, and how to retrieve data from that wallet.\n\n\nTasks we will cover in this short tutorial:\n\n\n\n\nAuthenticate your account (create an API Key)\n\n\nRetrieve data from your bitcoin wallet", 
            "title": "Embed quarters button"
        }, 
        {
            "location": "/guides/create-app/#create-app", 
            "text": "In this short guide, you\u2019ll learn how to programmatically create a bitcoin wallet, how to send bitcoin into that wallet, and how to retrieve data from that wallet.  Tasks we will cover in this short tutorial:   Authenticate your account (create an API Key)  Retrieve data from your bitcoin wallet", 
            "title": "Create App"
        }, 
        {
            "location": "/guides/create-app/", 
            "text": "Create App\n\n\nIn this short guide, you\u2019ll learn how to programmatically create a bitcoin wallet, how to send bitcoin into that wallet, and how to retrieve data from that wallet.\n\n\nTasks we will cover in this short tutorial:\n\n\n\n\nAuthenticate your account (create an API Key)\n\n\nRetrieve data from your bitcoin wallet", 
            "title": "Login with Quarters (oauth v2)"
        }, 
        {
            "location": "/guides/create-app/#create-app", 
            "text": "In this short guide, you\u2019ll learn how to programmatically create a bitcoin wallet, how to send bitcoin into that wallet, and how to retrieve data from that wallet.  Tasks we will cover in this short tutorial:   Authenticate your account (create an API Key)  Retrieve data from your bitcoin wallet", 
            "title": "Create App"
        }, 
        {
            "location": "/guides/create-app/", 
            "text": "Create App\n\n\nIn this short guide, you\u2019ll learn how to programmatically create a bitcoin wallet, how to send bitcoin into that wallet, and how to retrieve data from that wallet.\n\n\nTasks we will cover in this short tutorial:\n\n\n\n\nAuthenticate your account (create an API Key)\n\n\nRetrieve data from your bitcoin wallet", 
            "title": "Transfer quarters"
        }, 
        {
            "location": "/guides/create-app/#create-app", 
            "text": "In this short guide, you\u2019ll learn how to programmatically create a bitcoin wallet, how to send bitcoin into that wallet, and how to retrieve data from that wallet.  Tasks we will cover in this short tutorial:   Authenticate your account (create an API Key)  Retrieve data from your bitcoin wallet", 
            "title": "Create App"
        }
    ]
}